namespace = "Compile"
expectation = "Pass"
outputs = [[{ compile = [{ initial_symbol_table = "83233a4d6b86c488fed94d68788771c6d66e8db5d8cc19e944b83ce37957dc38", type_checked_symbol_table = "15213e27a07d404c060fba06a8846df7bf56af827ac8fce15f373c9257615522", unrolled_symbol_table = "15213e27a07d404c060fba06a8846df7bf56af827ac8fce15f373c9257615522", initial_ast = "044081cc738c05a86903cfb285e4b2994e436bba8663f87f11ee6b6e16fd6bca", unrolled_ast = "044081cc738c05a86903cfb285e4b2994e436bba8663f87f11ee6b6e16fd6bca", ssa_ast = "134737377e2e27801bd823e7d90d56b99021e8d09cbac924ac73881ef1c5e47f", flattened_ast = "e3c07d14b70ed9bd4f02aeb3b1adac0b797298b5abf4ec4fbab6c476f0cbe11c", destructured_ast = "c6975e528196ae4b38d166b1ffe7a192cf0fa438d4b61f066b0f1c10928a857a", inlined_ast = "03f567618b1eb4e8ac17544dba2c6cfe122aa84a9fa592ea79c459f851acc461", dce_ast = "03f567618b1eb4e8ac17544dba2c6cfe122aa84a9fa592ea79c459f851acc461", bytecode = """
program test.aleo;

struct TokenInfo:
    id as u64;

mapping token_name_to_info:
    key as field.public;
    value as TokenInfo.public;

function add_new_token:
    async add_new_token into r0;
    output r0 as test.aleo/add_new_token.future;

finalize add_new_token:
    branch.eq false false to end_then_0_0;
    branch.eq true true to end_otherwise_0_1;
    position end_then_0_0;
    position end_otherwise_0_1;
    branch.eq false false to end_then_0_2;
    branch.eq true false to end_then_1_4;
    branch.eq true true to end_otherwise_1_5;
    position end_then_1_4;
    position end_otherwise_1_5;
    cast 0u64 into r0 as TokenInfo;
    set r0 into token_name_to_info[0field];
    branch.eq true true to end_otherwise_0_3;
    position end_then_0_2;
    position end_otherwise_0_3;

function add_new_token_2:
    async add_new_token_2 into r0;
    output r0 as test.aleo/add_new_token_2.future;

finalize add_new_token_2:
    cast 0u64 into r0 as TokenInfo;
    get.or_use token_name_to_info[0field] r0 into r1;
    is.eq r1.id 0u64 into r2;
    cast 10u64 into r3 as TokenInfo;
    ternary r2 r3.id r1.id into r4;
    cast r4 into r5 as TokenInfo;
""", errors = "", warnings = "" }] }]]
